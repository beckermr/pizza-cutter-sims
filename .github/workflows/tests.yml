name: tests

on:
  push:
    branches:
      - main
  pull_request: null

env:
  PY_COLORS: "1"

jobs:
  tests:
    name: tests
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.8
          channels: conda-forge,defaults
          channel-priority: strict
          show-channel-urls: true
          miniforge-version: latest
          miniforge-variant: Mambaforge

      - name: configure conda and install code
        shell: bash -l {0}
        run: |
          conda config --set always_yes yes
          mamba install --quiet \
            --file=requirements.txt
          python -m pip install -e .
          wget -q https://www.cosmo.bnl.gov/www/beckermr/OneDegSq.fits
          echo "CATSIM_DIR=$(pwd)" >> $GITHUB_ENV

      - name: lint
        shell: bash -l {0}
        run: |
          flake8 pizza_cutter_sims
          flake8 bin/*
        env:
          CATSIM_DIR: ${{ env.CATSIM_DIR }}

      - name: test
        shell: bash -l {0}
        run: |
          pytest -vvs pizza_cutter_sims
        env:
          CATSIM_DIR: ${{ env.CATSIM_DIR }}

      - name: run example
        shell: bash -l {0}
        run: |
          pushd examples
          run-pizza-cutter-sims --config ref_config.yaml --seed=42 --n-sims=10 --backend=loky
          popd
        env:
          CATSIM_DIR: ${{ env.CATSIM_DIR }}

      - name: try all runs
        shell: bash -l {0}
        run: |
          pushd runs-color
          for dname in $(ls -d */); do
            echo "'${dname}'"
            pushd ${dname}
            run-pizza-cutter-sims --seed=42 --n-sims=1 --backend=local
            popd
          done
          popd
          pushd runs
          for dname in $(ls -d */); do
            echo "'${dname}'"
            pushd ${dname}
            run-pizza-cutter-sims --seed=42 --n-sims=1 --backend=local
            popd
          done
          popd
        env:
          CATSIM_DIR: ${{ env.CATSIM_DIR }}
